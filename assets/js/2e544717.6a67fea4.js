"use strict";(globalThis.webpackChunkdocs_site=globalThis.webpackChunkdocs_site||[]).push([[628],{4642:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"rules","title":"\ud83d\udccf Available Linter Rules","description":"Each rule can be enabled, disabled, or adjusted for severity in config/migration-linter.php.","source":"@site/docs/rules.md","sourceDirName":".","slug":"/rules","permalink":"/sufyan-laravel-migration-lint-package/docs/rules","draft":false,"unlisted":false,"editUrl":"https://github.com/muhammad-sufyan5/sufyan-laravel-migration-lint-package/tree/main/docs-site/docs/rules.md","tags":[],"version":"current","lastUpdatedBy":"Muhammad Sufyan","lastUpdatedAt":1761738540000,"sidebarPosition":5,"frontMatter":{"id":"rules","title":"\ud83d\udccf Available Linter Rules","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\uddf1 Configuration","permalink":"/sufyan-laravel-migration-lint-package/docs/configuration"},"next":{"title":"\ud83e\udde0 Writing Custom Rules","permalink":"/sufyan-laravel-migration-lint-package/docs/writing-custom-rules"}}');var l=i(4848),s=i(8453);const a={id:"rules",title:"\ud83d\udccf Available Linter Rules",sidebar_position:5},t=void 0,d={},o=[{value:"\u2699\ufe0f Severity Levels",id:"\ufe0f-severity-levels",level:3},{value:"Quick Navigation",id:"quick-navigation",level:3},{value:"\ud83e\udde9 AddNonNullableColumnWithoutDefault",id:"-addnonnullablecolumnwithoutdefault",level:2},{value:"\ud83d\udd0d What it checks",id:"-what-it-checks",level:3},{value:"\ud83d\udca3 Why it matters",id:"-why-it-matters",level:3},{value:"\u26a0\ufe0f Triggers",id:"\ufe0f-triggers",level:3},{value:"\ud83e\udde0 Recommendation",id:"-recommendation",level:3},{value:"\ud83e\udde9 MissingIndexOnForeignKey",id:"-missingindexonforeignkey",level:2},{value:"\ud83d\udd0d What it checks",id:"-what-it-checks-1",level:3},{value:"\ud83d\udca3 Why it matters",id:"-why-it-matters-1",level:3},{value:"\u26a0\ufe0f Triggers",id:"\ufe0f-triggers-1",level:3},{value:"\ud83e\udde0 Recommendation",id:"-recommendation-1",level:3},{value:"\ud83e\udde9 DropColumnWithoutBackup",id:"-dropcolumnwithoutbackup",level:2},{value:"\ud83d\udd0d What it checks",id:"-what-it-checks-2",level:3},{value:"\ud83d\udca3 Why it matters",id:"-why-it-matters-2",level:3},{value:"\u26a0\ufe0f Triggers",id:"\ufe0f-triggers-2",level:3},{value:"\ud83e\udde0 Recommendation",id:"-recommendation-2",level:3},{value:"\ud83e\udde9 AddUniqueConstraintOnNonEmptyColumn",id:"-adduniqueconstraintonnonemptycolumn",level:2},{value:"\ud83d\udd0d What it checks",id:"-what-it-checks-3",level:3},{value:"\ud83d\udca3 Why it matters",id:"-why-it-matters-3",level:3},{value:"\u26a0\ufe0f Triggers",id:"\ufe0f-triggers-3",level:3},{value:"\ud83e\udde0 Recommendation",id:"-recommendation-3",level:3},{value:"\ud83e\udde9 FloatColumnForMoney",id:"-floatcolumnformoney",level:2},{value:"\ud83d\udd0d What it checks",id:"-what-it-checks-4",level:3},{value:"\ud83d\udca3 Why it matters",id:"-why-it-matters-4",level:3},{value:"\u26a0\ufe0f Triggers",id:"\ufe0f-triggers-4",level:3},{value:"\ud83e\udde0 Recommendation",id:"-recommendation-4",level:3}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Each rule can be enabled, disabled, or adjusted for severity in ",(0,l.jsx)(n.code,{children:"config/migration-linter.php"}),".\r\nLaravel Migration Linter analyzes your migration files and flags potential schema risks.\r\nBelow are the built-in linting rules, each with ",(0,l.jsx)(n.code,{children:"rationale"}),", ",(0,l.jsx)(n.code,{children:"triggers"}),", and ",(0,l.jsx)(n.code,{children:"configuration"})," examples."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-severity-levels",children:"\u2699\ufe0f Severity Levels"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Severity"}),(0,l.jsx)(n.th,{children:"Meaning"}),(0,l.jsx)(n.th,{children:"Typical Use"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"info"})}),(0,l.jsx)(n.td,{children:"Advisory only"}),(0,l.jsx)(n.td,{children:"Local development"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"warning"})}),(0,l.jsx)(n.td,{children:"Risk detected, migration may succeed but unsafe"}),(0,l.jsx)(n.td,{children:"Default"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"error"})}),(0,l.jsx)(n.td,{children:"Definite risk, migration should fail in CI"}),(0,l.jsx)(n.td,{children:"Production enforcement"})]})]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"quick-navigation",children:"Quick Navigation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#-addnonnullablecolumnwithoutdefault",children:"AddNonNullableColumnWithoutDefault"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#-missingindexonforeignkey",children:"MissingIndexOnForeignKey"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#-dropcolumnwithoutbackup",children:"DropColumnWithoutBackup"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#-adduniqueconstraintonnonemptycolumn",children:"AddUniqueConstraintOnNonEmptyColumn"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#-floatcolumnformoney",children:"FloatColumnForMoney"})}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-addnonnullablecolumnwithoutdefault",children:"\ud83e\udde9 AddNonNullableColumnWithoutDefault"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Category:"})," Reliability / Safety",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default severity:"})," ",(0,l.jsx)(n.code,{children:"warning"})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-what-it-checks",children:"\ud83d\udd0d What it checks"}),"\n",(0,l.jsxs)(n.p,{children:["Warns when a ",(0,l.jsx)(n.strong,{children:"NOT NULL"})," column is added to an existing table ",(0,l.jsx)(n.strong,{children:"without"})," a default value."]}),"\n",(0,l.jsx)(n.p,{children:"On a table that already contains data, adding or altering a non-nullable column requires a default or a backfill step; otherwise the migration may fail or cause long-running locks."}),"\n",(0,l.jsx)(n.p,{children:"The rule now also detects:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"->change()"})," calls that modify existing columns to NOT NULL."]}),"\n",(0,l.jsxs)(n.li,{children:["Automatically skips ",(0,l.jsx)(n.code,{children:"Schema::create()"})," migrations (new tables)."]}),"\n",(0,l.jsxs)(n.li,{children:["Honors config keys ",(0,l.jsx)(n.code,{children:"large_table_names"})," and ",(0,l.jsx)(n.code,{children:"check_all_tables"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-why-it-matters",children:"\ud83d\udca3 Why it matters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["MySQL and PostgreSQL will try to fill existing rows with ",(0,l.jsx)(n.code,{children:"NULL"}),", violating the NOT NULL constraint."]}),"\n",(0,l.jsx)(n.li,{children:"Large tables can experience long locks while the new column is materialized."}),"\n",(0,l.jsx)(n.li,{children:"Production deploys may fail midway, leaving partially applied migrations."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-triggers",children:"\u26a0\ufe0f Triggers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$table->string('email')->nullable(false);\r\n$table->integer('quantity')->nullable(false);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2705 Safe alternatives"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// Option 1: Provide a sensible default\r\n$table->string('email')->default('')->nullable(false);\r\n\r\n// Option 2: Add as nullable, backfill, then alter\r\n$table->string('email')->nullable();\r\nDB::table('users')->update(['email' => '']);\r\n$table->string('email')->nullable(false)->change();\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2699\ufe0f Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'AddNonNullableColumnWithoutDefault' => [\r\n    'enabled'  => true,\r\n    'severity' => 'warning', // change to 'error' to fail CI\r\n],\n"})}),"\n",(0,l.jsx)(n.p,{children:"Additional global options:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"'large_table_names' => ['users', 'orders'],  // Only check these if check_all_tables = false\r\n'check_all_tables'  => true,                 // Lint all tables by default\n"})}),"\n",(0,l.jsx)(n.p,{children:"\ud83e\uddfe Example output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"[warning] AddNonNullableColumnWithoutDefault  \r\n\u2192 Column 'email' on table 'users' is non-nullable without a default value.\n"})}),"\n",(0,l.jsx)(n.h3,{id:"-recommendation",children:"\ud83e\udde0 Recommendation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Always provide a default value when adding NOT NULL columns."}),"\n",(0,l.jsxs)(n.li,{children:["When modifying existing columns, use a two-step migration:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add or backfill data."}),"\n",(0,l.jsx)(n.li,{children:"Then enforce the NOT NULL constraint."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Skip new-table checks since Schema::create() is safe."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-missingindexonforeignkey",children:"\ud83e\udde9 MissingIndexOnForeignKey"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Category:"})," Performance / Integrity",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default severity:"})," ",(0,l.jsx)(n.code,{children:"warning"})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-what-it-checks-1",children:"\ud83d\udd0d What it checks"}),"\n",(0,l.jsx)(n.p,{children:"Warns when foreign key\u2013like columns are added without an index or foreign-key constraint."}),"\n",(0,l.jsx)(n.p,{children:"The rule now detects:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"foreignId('user_id')"})," without ",(0,l.jsx)(n.code,{children:"->constrained()"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"morphs()"})," or ",(0,l.jsx)(n.code,{children:"nullableMorphs()"})," without ",(0,l.jsx)(n.code,{children:"->index()"})]}),"\n",(0,l.jsxs)(n.li,{children:["Composite ",(0,l.jsx)(n.code,{children:"foreign([...])"})," keys without an accompanying ",(0,l.jsx)(n.code,{children:"index([...])"})]}),"\n",(0,l.jsxs)(n.li,{children:["(Legacy ",(0,l.jsx)(n.code,{children:"_id"})," heuristic removed for better accuracy)"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-why-it-matters-1",children:"\ud83d\udca3 Why it matters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Queries that join on the foreign-key column become slow without an index."}),"\n",(0,l.jsx)(n.li,{children:"Deletes or updates on the parent table can lock the child table."}),"\n",(0,l.jsx)(n.li,{children:"Missing indexes lead to poor query-planner choices and high I/O cost."}),"\n",(0,l.jsx)(n.li,{children:"Composite keys without indexes can lead to full-table scans."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-triggers-1",children:"\u26a0\ufe0f Triggers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \ud83d\udeab No ->constrained() \u2014 adds column but not FK or index\r\n$table->foreignId('user_id');\r\n\r\n// \ud83d\udeab No ->index() on polymorphic relation\r\n$table->morphs('taggable');\r\n\r\n// \ud83d\udeab Composite foreign key without index\r\n$table->foreign(['user_id', 'tenant_id'])\r\n      ->references(['id', 'id'])\r\n      ->on('users');\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2705 Safe alternatives"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \u2705 add explicit constraint\r\n$table->foreignId('user_id')->constrained();\r\n\r\n// \u2705 add index to polymorphic relation\r\n$table->morphs('taggable');\r\n$table->index(['taggable_id', 'taggable_type']);\r\n\r\n// \u2705 composite FK with matching index\r\n$table->foreign(['user_id', 'tenant_id'])\r\n      ->references(['id', 'id'])\r\n      ->on('users');\r\n$table->index(['user_id', 'tenant_id']);\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2699\ufe0f Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'MissingIndexOnForeignKey' => [\r\n    'enabled'  => true,\r\n    'severity' => 'warning', // or 'error' to block CI\r\n    // \ud83e\udde9 Feature toggles\r\n    'check_foreign_id_without_constrained' => true,\r\n    'check_morphs_without_index'           => true,\r\n    'check_composite_foreign'              => true,\r\n],\n"})}),"\n",(0,l.jsx)(n.p,{children:"\ud83e\uddfe Example output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"[warning] MissingIndexOnForeignKey  \r\n\u2192 Column 'user_id' on table 'orders' uses foreignId() but has no ->constrained(); constraint or index may be missing.\r\n\r\n[warning] MissingIndexOnForeignKey  \r\n\u2192 Polymorphic relation 'taggable' on table 'tags' has no index; consider adding ->index() for faster lookups.\r\n\n"})}),"\n",(0,l.jsx)(n.h3,{id:"-recommendation-1",children:"\ud83e\udde0 Recommendation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Always use     instead of manual ",(0,l.jsx)(n.code,{children:"unsignedBigInteger()."})]}),"\n",(0,l.jsxs)(n.li,{children:["Index all polymorphic relations (",(0,l.jsx)(n.code,{children:"morphs"}),", ",(0,l.jsx)(n.code,{children:"nullableMorphs"}),")."]}),"\n",(0,l.jsx)(n.li,{children:"Add composite indexes for multi-column foreign keys."}),"\n",(0,l.jsx)(n.li,{children:"Keep this rule enabled in CI to prevent slow queries and orphaned data."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-dropcolumnwithoutbackup",children:"\ud83e\udde9 DropColumnWithoutBackup"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Category:"})," Data Safety",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default severity:"})," ",(0,l.jsx)(n.code,{children:"warning"})," ",(0,l.jsxs)(n.em,{children:["(consider setting to ",(0,l.jsx)(n.code,{children:"error"})," in CI)"]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-what-it-checks-2",children:"\ud83d\udd0d What it checks"}),"\n",(0,l.jsxs)(n.p,{children:["Warns whenever a migration ",(0,l.jsx)(n.strong,{children:"drops one or more columns"})," from a table without any indication of backup or confirmation."]}),"\n",(0,l.jsx)(n.p,{children:"The rule now also:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Detects multiple-column drops such as ",(0,l.jsx)(n.code,{children:"dropColumn(['a','b'])"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Skips warnings if the migration line includes a \u201csafe-drop\u201d comment, e.g. ",(0,l.jsx)(n.code,{children:"// safe drop "}),"or ",(0,l.jsx)(n.code,{children:"/* safe-drop */"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-why-it-matters-2",children:"\ud83d\udca3 Why it matters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Dropping a column permanently deletes data \u2014 no rollback can recover it."}),"\n",(0,l.jsx)(n.li,{children:"Production databases often require a backup or rename step before deletion."}),"\n",(0,l.jsx)(n.li,{children:"Irreversible drops can break reports, analytics, or legacy code paths."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-triggers-2",children:"\u26a0\ufe0f Triggers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \ud83d\udeab Single column drop\r\n$table->dropColumn('middle_name');\r\n\r\n// \ud83d\udeab Multiple column drop\r\n$table->dropColumn(['middle_name', 'nickname']);\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2705 Safer approaches"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \u2705 1. Rename instead of drop (keep data)\r\n$table->renameColumn('middle_name', 'middle_name_old');\r\n\r\n// \u2705 2. Back up before dropping\r\nDB::table('users')\r\n  ->select('id', 'middle_name')\r\n  ->whereNotNull('middle_name')\r\n  ->chunk(500, fn ($rows) =>\r\n      Storage::disk('backups')->append('user_middle_names.csv', json_encode($rows))\r\n  );\r\n\r\n// \u2705 3. Confirm safe drop explicitly\r\n$table->dropColumn(['middle_name', 'nickname']); // safe drop\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2699\ufe0f Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'DropColumnWithoutBackup' => [\r\n    'enabled'  => true,\r\n    'severity' => 'warning', // can be 'error' in strict mode\r\n    'allow_safe_comment' => true, // skip warnings for \"// safe drop\" comments\r\n],\n"})}),"\n",(0,l.jsx)(n.p,{children:"\ud83e\uddfe Example output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"[warning] DropColumnWithoutBackup\r\n\u2192 Dropping multiple columns ('middle_name', 'nickname') from table 'users' may result in data loss.\n"})}),"\n",(0,l.jsx)(n.h3,{id:"-recommendation-2",children:"\ud83e\udde0 Recommendation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Treat column drops as production-critical operations."}),"\n",(0,l.jsx)(n.li,{children:"Always back up or rename before deletion."}),"\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"// safe drop"})," comments to explicitly acknowledge intentional removals."]}),"\n",(0,l.jsxs)(n.li,{children:["In CI, set severity = ",(0,l.jsx)(n.code,{children:"error"})," to prevent accidental data loss migrations."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-adduniqueconstraintonnonemptycolumn",children:"\ud83e\udde9 AddUniqueConstraintOnNonEmptyColumn"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Category:"})," Data Integrity",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default severity:"})," ",(0,l.jsx)(n.code,{children:"warning"})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-what-it-checks-3",children:"\ud83d\udd0d What it checks"}),"\n",(0,l.jsxs)(n.p,{children:["Warns when a migration adds a ",(0,l.jsx)(n.strong,{children:"unique constraint"})," (either explicitly or inline) to a column that may already contain duplicate data."]}),"\n",(0,l.jsx)(n.p,{children:"The rule now detects:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Explicit ",(0,l.jsx)(n.code,{children:"$table->unique('column')"})]}),"\n",(0,l.jsxs)(n.li,{children:["Composite",(0,l.jsx)(n.code,{children:" $table->unique(['col1','col2'])"})]}),"\n",(0,l.jsxs)(n.li,{children:["Inline ",(0,l.jsx)(n.code,{children:"->unique()"})," calls on column definitions"]}),"\n",(0,l.jsxs)(n.li,{children:["Inline ",(0,l.jsx)(n.code,{children:"->unique()->change()"})," calls that modify existing columns"]}),"\n",(0,l.jsx)(n.li,{children:"Optional config flag to disable composite detection"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-why-it-matters-3",children:"\ud83d\udca3 Why it matters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If duplicates exist, the migration will ",(0,l.jsx)(n.strong,{children:"fail"})," and may roll back partially."]}),"\n",(0,l.jsx)(n.li,{children:"Even if it succeeds on empty tables, applying later on filled tables can break deploys."}),"\n",(0,l.jsx)(n.li,{children:"Large tables with duplicates can cause long locks during constraint creation."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-triggers-3",children:"\u26a0\ufe0f Triggers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \ud83d\udeab explicit unique constraint\r\n$table->unique('email');\r\n\r\n// \ud83d\udeab composite unique constraint\r\n$table->unique(['email', 'tenant_id']);\r\n\r\n// \ud83d\udeab inline unique definition\r\n$table->string('email')->unique();\r\n\r\n// \ud83d\udeab inline unique with change() on existing column\r\n$table->string('username')->unique()->change();\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2705 Safer rollout pattern"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// 1\ufe0f\u20e3 Detect duplicates\r\n$dupes = DB::table('users')\r\n    ->select('email')\r\n    ->groupBy('email')\r\n    ->havingRaw('COUNT(*) > 1')\r\n    ->get();\r\n\r\nif ($dupes->isNotEmpty()) {\r\n    // cleanup manually or via script before migration\r\n}\r\n\r\n// 2\ufe0f\u20e3 Once deduped, safely add constraint\r\n$table->unique('email');\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2699\ufe0f Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'AddUniqueConstraintOnNonEmptyColumn' => [\r\n    'enabled'  => true,\r\n    'severity' => 'warning', // can raise to 'error' for CI enforcement\r\n    'check_composite' => true,      // enable composite unique detection\r\n],\n"})}),"\n",(0,l.jsx)(n.p,{children:"\ud83e\uddfe Example output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"[warning] AddUniqueConstraintOnNonEmptyColumn\r\n\u2192 Adding composite unique constraint on ('email', 'tenant_id') in 'users' may fail if duplicates already exist.\n"})}),"\n",(0,l.jsx)(n.h3,{id:"-recommendation-3",children:"\ud83e\udde0 Recommendation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Always scan for duplicates before adding unique constraints."}),"\n",(0,l.jsx)(n.li,{children:"Use two-step rollouts for production: detect + cleanup, then constrain."}),"\n",(0,l.jsx)(n.li,{children:"Avoid adding uniqueness inline during schema creation on large tables."}),"\n",(0,l.jsxs)(n.li,{children:["Disable ",(0,l.jsx)(n.code,{children:"check_composite"})," if composite indexes are validated elsewhere."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-floatcolumnformoney",children:"\ud83e\udde9 FloatColumnForMoney"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Category:"})," Precision / Data Integrity",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default severity:"})," ",(0,l.jsx)(n.code,{children:"warning"})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-what-it-checks-4",children:"\ud83d\udd0d What it checks"}),"\n",(0,l.jsxs)(n.p,{children:["Warns when a migration defines a ",(0,l.jsx)(n.strong,{children:"float"})," column for values that appear to represent ",(0,l.jsx)(n.strong,{children:"money or currency"})," (e.g., ",(0,l.jsx)(n.code,{children:"price"}),", ",(0,l.jsx)(n.code,{children:"amount"}),", ",(0,l.jsx)(n.code,{children:"balance"}),", ",(0,l.jsx)(n.code,{children:"total"}),", etc.)."]}),"\n",(0,l.jsx)(n.p,{children:"The rule now detects:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"float()"}),", ",(0,l.jsx)(n.code,{children:"double()"}),", or ",(0,l.jsx)(n.code,{children:"real()"})," methods used on money-like columns."]}),"\n",(0,l.jsxs)(n.li,{children:["Column names containing terms such as ",(0,l.jsx)(n.code,{children:"_price"}),", ",(0,l.jsx)(n.code,{children:"_amount"}),", ",(0,l.jsx)(n.code,{children:"_cost"}),", ",(0,l.jsx)(n.code,{children:"_balance"}),", ",(0,l.jsx)(n.code,{children:"_tax"}),", ",(0,l.jsx)(n.code,{children:"_fee"}),", ",(0,l.jsx)(n.code,{children:"_total"}),", ",(0,l.jsx)(n.code,{children:"_revenue"}),", ",(0,l.jsx)(n.code,{children:"_discount"}),", ",(0,l.jsx)(n.code,{children:"_charge"}),", ",(0,l.jsx)(n.code,{children:"_credit"}),", etc."]}),"\n",(0,l.jsxs)(n.li,{children:["Configurable detection for ",(0,l.jsx)(n.code,{children:"double()"})," and ",(0,l.jsx)(n.code,{children:"real()"})," usage."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-why-it-matters-4",children:"\ud83d\udca3 Why it matters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Floating-point numbers introduce rounding errors that can silently corrupt financial totals."}),"\n",(0,l.jsx)(n.li,{children:"Different database engines may round differently (especially MySQL vs. PostgreSQL)."}),"\n",(0,l.jsx)(n.li,{children:"Financial, billing, and accounting tables require exact precision \u2014 use decimal(p, s) instead."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-triggers-4",children:"\u26a0\ufe0f Triggers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \ud83d\udeab Inaccurate monetary representation\r\n$table->float('price');\r\n$table->double('amount');\r\n$table->real('balance');\r\n$table->float('tax');\r\n$table->float('total');\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2705 Recommended alternatives"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// \u2705 Use fixed-point decimal type with precision and scale\r\n$table->decimal('price', 10, 2);\r\n$table->decimal('amount', 12, 4);\r\n\r\n// \u2705 For safety, define a custom schema macro\r\n$table->money('price'); // wraps decimal(10, 2)\r\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u2699\ufe0f Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'FloatColumnForMoney' => [\r\n    'enabled'  => true,\r\n    'severity' => 'warning', // can be 'error' for strict CI mode\r\n    'check_double' => true,      // include double() in checks\r\n    'check_real'   => true,      // include real() in checks\r\n],\n"})}),"\n",(0,l.jsx)(n.p,{children:"\ud83e\uddfe Example output"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"[warning] FloatColumnForMoney\r\n\u2192 Column 'amount' in table 'payments' uses double(); consider using decimal(10,2) or storing values in minor units (e.g. cents).\r\n\n"})}),"\n",(0,l.jsx)(n.h3,{id:"-recommendation-4",children:"\ud83e\udde0 Recommendation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"decimal(p, s)"})," (commonly ",(0,l.jsx)(n.code,{children:"decimal(10,2)"})," or ",(0,l.jsx)(n.code,{children:"decimal(12,4)"}),") for any money, cost, tax, or balance fields."]}),"\n",(0,l.jsxs)(n.li,{children:["Reserve ",(0,l.jsx)(n.code,{children:"float()"}),", ",(0,l.jsx)(n.code,{children:"double()"}),", or ",(0,l.jsx)(n.code,{children:"real()"})," for scientific or approximate data (measurements, ratios, etc.)."]}),"\n",(0,l.jsx)(n.li,{children:"Avoid floating-point math in any table representing financial accuracy or audits."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var r=i(6540);const l={},s=r.createContext(l);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);