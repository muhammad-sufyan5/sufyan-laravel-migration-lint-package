"use strict";(globalThis.webpackChunkdocs_site=globalThis.webpackChunkdocs_site||[]).push([[466],{6567:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"writing-custom-rules","title":"\ud83e\udde0 Writing Custom Rules","description":"Laravel Migration Linter is designed to be fully extensible \u2014","source":"@site/docs/writing-custom-rules.md","sourceDirName":".","slug":"/writing-custom-rules","permalink":"/sufyan-laravel-migration-lint-package/docs/writing-custom-rules","draft":false,"unlisted":false,"editUrl":"https://github.com/muhammad-sufyan5/sufyan-laravel-migration-lint-package/tree/main/docs-site/docs/writing-custom-rules.md","tags":[],"version":"current","lastUpdatedBy":"Muhammad Sufyan","lastUpdatedAt":1761646513000,"sidebarPosition":6,"frontMatter":{"id":"writing-custom-rules","title":"\ud83e\udde0 Writing Custom Rules","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udccf Available Linter Rules","permalink":"/sufyan-laravel-migration-lint-package/docs/rules"},"next":{"title":"\ud83e\udd16 CI/CD Integration","permalink":"/sufyan-laravel-migration-lint-package/docs/ci-cd"}}');var t=r(4848),s=r(8453);const l={id:"writing-custom-rules",title:"\ud83e\udde0 Writing Custom Rules",sidebar_position:6},a=void 0,o={},u=[{value:"\ud83e\udde9 1\ufe0f\u20e3 Create a Custom Rule Class",id:"-1\ufe0f\u20e3-create-a-custom-rule-class",level:2},{value:"\u2699\ufe0f 2\ufe0f\u20e3 Register the Rule",id:"\ufe0f-2\ufe0f\u20e3-register-the-rule",level:2},{value:"\ud83e\uddea 3\ufe0f\u20e3 Run the Linter",id:"-3\ufe0f\u20e3-run-the-linter",level:2},{value:"\ud83d\udca1 Tips for Rule Authors",id:"-tips-for-rule-authors",level:2}];function c(e){const n={br:"br",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Laravel Migration Linter is designed to be ",(0,t.jsx)(n.strong,{children:"fully extensible"})," \u2014",(0,t.jsx)(n.br,{}),"\n","you can easily create your own rule classes to lint for specific schema patterns or organization-specific policies."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-1\ufe0f\u20e3-create-a-custom-rule-class",children:"\ud83e\udde9 1\ufe0f\u20e3 Create a Custom Rule Class"}),"\n",(0,t.jsxs)(n.p,{children:["Create a new rule class anywhere in your app or within a separate package.",(0,t.jsx)(n.br,{}),"\n","Each rule must extend the core ",(0,t.jsx)(n.code,{children:"Sufyan\\MigrationLinter\\Rules\\AbstractRule"})," class and implement:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id()"})," \u2192 unique identifier (string)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description()"})," \u2192 short explanation of what the rule checks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"check(Operation $operation)"})," \u2192 main logic (returns an array of ",(0,t.jsx)(n.code,{children:"Issue"})," objects)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\r\n\r\nnamespace App\\MigrationRules;\r\n\r\nuse Sufyan\\MigrationLinter\\Rules\\AbstractRule;\r\nuse Sufyan\\MigrationLinter\\Support\\Operation;\r\n\r\nclass NoUnsignedBigIntRule extends AbstractRule\r\n{\r\n    public function id(): string\r\n    {\r\n        return 'NoUnsignedBigIntRule';\r\n    }\r\n\r\n    public function defaultSeverity(): string\r\n    {\r\n        return 'warning';\r\n    }\r\n\r\n    public function description(): string\r\n    {\r\n        return 'Discourages the use of unsignedBigInteger for portability reasons.';\r\n    }\r\n\r\n    /**\r\n     * @return \\Sufyan\\MigrationLinter\\Support\\Issue[]\r\n     */\r\n    public function check(Operation $operation): array\r\n    {\r\n        // Inspect the migration operation\r\n        if ($operation->method === 'unsignedBigInteger') {\r\n            return [\r\n                $this->warn(\r\n                    $operation,\r\n                    \"Avoid using unsignedBigInteger on table '{$operation->table}'. Use bigInteger() instead for better portability.\"\r\n                ),\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-2\ufe0f\u20e3-register-the-rule",children:"\u2699\ufe0f 2\ufe0f\u20e3 Register the Rule"}),"\n",(0,t.jsx)(n.p,{children:"Once your rule is ready, add it to the configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"// config/migration-linter.php\r\n\r\nreturn [\r\n    'rules' => [\r\n        // Existing built-in rules...\r\n\r\n        'NoUnsignedBigIntRule' => [\r\n            'enabled'  => true,\r\n            'severity' => 'warning', // can be 'error' for strict enforcement\r\n        ],\r\n    ],\r\n];\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can also publish the config file using:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'php artisan vendor:publish --tag="migration-linter-config"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-3\ufe0f\u20e3-run-the-linter",children:"\ud83e\uddea 3\ufe0f\u20e3 Run the Linter"}),"\n",(0,t.jsx)(n.p,{children:"Simply run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"php artisan migrate:lint\n"})}),"\n",(0,t.jsx)(n.p,{children:"Your custom rule will now be executed alongside the built-in ones.\r\nIf it finds any violations, they\u2019ll appear in the standard lint report."}),"\n",(0,t.jsx)(n.h2,{id:"-tips-for-rule-authors",children:"\ud83d\udca1 Tips for Rule Authors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"warn()"}),", ",(0,t.jsx)(n.code,{children:"error()"}),", or other helpers to create issues that respect severity from the config."]}),"\n",(0,t.jsx)(n.li,{children:"Keep rules focused \u2014 each rule should detect one kind of problem clearly."}),"\n",(0,t.jsxs)(n.li,{children:["Leverage Operation properties like:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"$operation->method \u2192 migration method (e.g. string, dropColumn)"}),"\n",(0,t.jsx)(n.li,{children:"$operation->args \u2192 raw arguments as string"}),"\n",(0,t.jsx)(n.li,{children:"$operation->table \u2192 table name"}),"\n",(0,t.jsx)(n.li,{children:"$operation->file \u2192 file path"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Return an empty array if no issue is detected."}),"\n",(0,t.jsx)(n.li,{children:"You can group your own rules in a namespace like App\\MigrationRules or App\\LinterRules."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\ud83e\udde0 Example Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"[warning] NoUnsignedBigIntRule  \r\n\u2192 Avoid using unsignedBigInteger on table 'users'. Use bigInteger() instead for better portability.\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u2705 That\u2019s it!\r\nYour custom rules will now integrate seamlessly with Laravel Migration Linter\u2019s reporting, severity configuration, and CI workflows."}),"\n",(0,t.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);