"use strict";(globalThis.webpackChunkdocs_site=globalThis.webpackChunkdocs_site||[]).push([[596],{2464:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ci-cd","title":"\ud83e\udd16 CI/CD Integration","description":"Laravel Migration Linter integrates seamlessly with GitHub Actions, GitLab CI, and other continuous integration pipelines.","source":"@site/docs/ci-cd.md","sourceDirName":".","slug":"/ci-cd","permalink":"/sufyan-laravel-migration-lint-package/docs/ci-cd","draft":false,"unlisted":false,"editUrl":"https://github.com/muhammad-sufyan5/sufyan-laravel-migration-lint-package/tree/main/docs-site/docs/ci-cd.md","tags":[],"version":"current","lastUpdatedBy":"Muhammad Sufyan","lastUpdatedAt":1761640866000,"sidebarPosition":7,"frontMatter":{"id":"ci-cd","title":"\ud83e\udd16 CI/CD Integration","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\udde0 Writing Custom Rules","permalink":"/sufyan-laravel-migration-lint-package/docs/writing-custom-rules"},"next":{"title":"\ud83d\uddd3\ufe0f Changelog","permalink":"/sufyan-laravel-migration-lint-package/docs/changelog"}}');var t=r(4848),s=r(8453);const a={id:"ci-cd",title:"\ud83e\udd16 CI/CD Integration",sidebar_position:7},l=void 0,o={},c=[{value:"\ud83e\uddf0 GitHub Actions Example",id:"-github-actions-example",level:2},{value:"\ud83e\uddea Example in CI Console",id:"-example-in-ci-console",level:2},{value:"\ud83d\udcca Exit Codes and Build Behavior",id:"-exit-codes-and-build-behavior",level:2},{value:"\ud83e\udde0 Tips for CI/CD Integration",id:"-tips-for-cicd-integration",level:2},{value:"\ud83e\uddfe GitLab CI Example",id:"-gitlab-ci-example",level:2}];function d(e){const n={br:"br",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Laravel Migration Linter integrates seamlessly with ",(0,t.jsx)(n.strong,{children:"GitHub Actions"}),", ",(0,t.jsx)(n.strong,{children:"GitLab CI"}),", and other continuous integration pipelines.",(0,t.jsx)(n.br,{}),"\n","It ensures no unsafe schema changes reach production by failing builds when risky migrations are detected."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-github-actions-example",children:"\ud83e\uddf0 GitHub Actions Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: Laravel Migration Linter\r\n\r\non:\r\n  push:\r\n    branches: [ main, master ]\r\n  pull_request:\r\n    branches: [ main, master ]\r\n\r\njobs:\r\n  lint-migrations:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v4\r\n      - uses: shivammathur/setup-php@v2\r\n        with:\r\n          php-version: 8.3\r\n          extensions: mbstring, pdo, bcmath, curl, dom, xml\r\n          tools: composer:v2\r\n\r\n      # \ud83e\udde9 Example: setting up a test Laravel project using your local package\r\n      - run: composer create-project laravel/laravel test-laravel-app --quiet\r\n\r\n      - name: Install Laravel Migration Linter (local path)\r\n        run: |\r\n          cd test-laravel-app\r\n          composer config repositories.sufyandev path ../\r\n          composer require sufyandev/laravel-migration-linter:@dev --no-interaction\r\n\r\n      - name: Run Migration Linter\r\n        run: |\r\n          cd test-laravel-app\r\n          php artisan migrate:lint --json > lint-report.json\r\n\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-in-ci-console",children:"\ud83e\uddea Example in CI Console"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"\ud83d\udd0d Running Laravel Migration Linter...\r\n\r\n\u26a0\ufe0f  Lint Report\r\n+-------------------------------------+-------------------------------------------+-----------+----------+----------------------------------------------------------+\r\n| File                                | Rule                                      | Column    | Severity | Message                                                  |\r\n+-------------------------------------+-------------------------------------------+-----------+----------+----------------------------------------------------------+\r\n| 0001_01_01_000000_create_users.php  | AddNonNullableColumnWithoutDefault        | email     | warning  | Adding NOT NULL column without default value.           |\r\n| 2025_10_15_000000_create_orders.php | FloatColumnForMoney                       | price     | warning  | Using float() for price \u2014 use decimal(10,2) instead.     |\r\n+-------------------------------------+-------------------------------------------+-----------+----------+----------------------------------------------------------+\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-exit-codes-and-build-behavior",children:"\ud83d\udcca Exit Codes and Build Behavior"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Severity Threshold"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Exit Code"}),(0,t.jsx)(n.th,{children:"Build Result"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"info"})}),(0,t.jsx)(n.td,{children:"Advisory messages only"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"\u2705 Pass"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"warning"})}),(0,t.jsx)(n.td,{children:"Potential issues found, not fatal"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"\u2705 Pass"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"error"})}),(0,t.jsx)(n.td,{children:"Migration-breaking or data-loss risks"}),(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"\u274c Fail"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"You can adjust this threshold via config/migration-linter.php:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'severity_threshold' => 'error',\n"})}),"\n",(0,t.jsx)(n.p,{children:"When set to 'error', only error-level issues cause your CI pipeline to fail."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-tips-for-cicd-integration",children:"\ud83e\udde0 Tips for CI/CD Integration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\ud83d\udcbe Commit the baseline file (migration-linter-baseline.json) once generated."}),"\n",(0,t.jsx)(n.li,{children:"This prevents known legacy issues from reappearing in reports."}),"\n",(0,t.jsx)(n.li,{children:"\ud83e\udde9 Use --json output to generate structured reports for custom dashboards."}),"\n",(0,t.jsx)(n.li,{children:"You can also upload the JSON artifact for analysis."}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udea6 Fail fast: set 'severity_threshold' => 'error' in config to stop deployments on risky migrations."}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udd01 Run on every PR \u2014 this ensures every migration is linted before merge."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-gitlab-ci-example",children:"\ud83e\uddfe GitLab CI Example"}),"\n",(0,t.jsx)(n.p,{children:"If you're using GitLab, add a stage like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"stages:\r\n  - lint\r\n\r\nlint_migrations:\r\n  stage: lint\r\n  image: php:8.3\r\n  script:\r\n    - apt-get update && apt-get install -y unzip git\r\n    - curl -sS https://getcomposer.org/installer | php\r\n    - php composer.phar install --no-interaction\r\n    - php artisan migrate:lint --json > lint-report.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u2705 Result:\r\nYour CI/CD pipeline now automatically enforces safe, production-ready migrations \u2014 blocking schema-breaking changes before they reach your main branch."}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(6540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);